//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(DataModel.PeopleDedicatedEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets24fc34f2540ff19e62c9d21f4da0dde36d3b1df3f3f0e92d5318a07026baca76))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySets24fc34f2540ff19e62c9d21f4da0dde36d3b1df3f3f0e92d5318a07026baca76 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "24fc34f2540ff19e62c9d21f4da0dde36d3b1df3f3f0e92d5318a07026baca76"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "PeopleDedicatedModelStoreContainer.People")
            {
                return GetView0();
            }

            if (extentName == "PeopleDedicatedEntities.People")
            {
                return GetView1();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for PeopleDedicatedModelStoreContainer.People.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing People
        [PeopleDedicatedModel.Store.People](T1.People_Id, T1.People_FirstName, T1.People_LastName, T1.People_DateOfBirth, T1.People_Sex, T1.People_Strength, T1.People_Perception, T1.People_Endurance, T1.People_Charisma, T1.People_Intelligence, T1.People_Agility, T1.People_Luck, T1.People_Job, T1.People_Partner)
    FROM (
        SELECT 
            T.Id AS People_Id, 
            T.FirstName AS People_FirstName, 
            T.LastName AS People_LastName, 
            T.DateOfBirth AS People_DateOfBirth, 
            T.Sex AS People_Sex, 
            T.Strength AS People_Strength, 
            T.Perception AS People_Perception, 
            T.Endurance AS People_Endurance, 
            T.Charisma AS People_Charisma, 
            T.Intelligence AS People_Intelligence, 
            T.Agility AS People_Agility, 
            T.Luck AS People_Luck, 
            T.Job AS People_Job, 
            T.Partner AS People_Partner, 
            True AS _from0
        FROM PeopleDedicatedEntities.People AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for PeopleDedicatedEntities.People.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing People
        [PeopleDedicatedModel.People](T1.People_Id, T1.People_FirstName, T1.People_LastName, T1.People_DateOfBirth, T1.People_Sex, T1.People_Strength, T1.People_Perception, T1.People_Endurance, T1.People_Charisma, T1.People_Intelligence, T1.People_Agility, T1.People_Luck, T1.People_Job, T1.People_Partner)
    FROM (
        SELECT 
            T.Id AS People_Id, 
            T.FirstName AS People_FirstName, 
            T.LastName AS People_LastName, 
            T.DateOfBirth AS People_DateOfBirth, 
            T.Sex AS People_Sex, 
            T.Strength AS People_Strength, 
            T.Perception AS People_Perception, 
            T.Endurance AS People_Endurance, 
            T.Charisma AS People_Charisma, 
            T.Intelligence AS People_Intelligence, 
            T.Agility AS People_Agility, 
            T.Luck AS People_Luck, 
            T.Job AS People_Job, 
            T.Partner AS People_Partner, 
            True AS _from0
        FROM PeopleDedicatedModelStoreContainer.People AS T
    ) AS T1");
        }
    }
}
